name: Docker Build and Deploy Reactions Domain

on:
  push:
    branches: [main, test]
    paths:
      - '.github/workflows/**'      
      - 'add-like/**'
      - 'remove-like/**'
      - 'get-likes/**'
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/**'      
      - 'add-like/**'
      - 'remove-like/**'
      - 'get-likes/**'

env:
    DB_HOST: ${{ secrets.DB_HOST }}
    DB_USER: ${{ secrets.DB_USER }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    DB_PORT: ${{ secrets.DB_PORT }}
    JWT_SECRET: ${{ secrets.JWT_SECRET }}
    PET_DB_NAME: ${{ secrets.PET_DB_NAME }}
    POST_DB_NAME: ${{ secrets.POST_DB_NAME }}
    REACTIONS_DB_NAME: ${{ secrets.REACTIONS_DB_NAME }}
    WEBHOOK_NOTIFICATIONS_URL: ${{ secrets.WEBHOOK_NOTIFICATIONS_URL }}
    REDIS_HOST: ${{ secrets.REDIS_HOST }}
    REDIS_PORT: ${{ secrets.REDIS_PORT }}
    EC2_REACTIONS_DOMAIN_TEST: ${{ secrets.EC2_REACTIONS_DOMAIN_TEST }}
    EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [add-like, remove-like, get-likes]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: steps.changes.outputs.changed == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ matrix.service }}/requirements.txt
          pip install pytest python-dotenv

      - name: Crear archivo .env con secrets de GitHub
        if: steps.changes.outputs.changed == 'true'
        working-directory: ${{ matrix.service }}
        run: |
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_PORT=${{ secrets.DB_PORT }}
          PET_DB_NAME=${{ secrets.PET_DB_NAME }}
          POST_DB_NAME=${{ secrets.POST_DB_NAME }}
          REACTIONS_DB_NAME=${{ secrets.REACTIONS_DB_NAME }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          EOF

      - name: Run environment tests
        if: steps.changes.outputs.changed == 'true'
        working-directory: ${{ matrix.service }}
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          PET_DB_NAME: ${{ secrets.PET_DB_NAME }}
          POST_DB_NAME: ${{ secrets.POST_DB_NAME }}
          REACTIONS_DB_NAME: ${{ secrets.REACTIONS_DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: pytest tests/test_env.py

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [add-like, remove-like, get-likes]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        if: steps.changes.outputs.changed == 'true'
        run: docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest ./${{ matrix.service }}

      - name: Save Docker image artifact
        if: steps.changes.outputs.changed == 'true'
        run: docker save ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest -o ${{ matrix.service }}.tar

      - uses: actions/upload-artifact@v4
        if: steps.changes.outputs.changed == 'true'
        with:
          name: ${{ matrix.service }}-image
          path: ${{ matrix.service }}.tar

  push:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        service: [add-like, remove-like, get-likes]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/download-artifact@v4
        if: steps.changes.outputs.changed == 'true'
        with:
          name: ${{ matrix.service }}-image

      - name: Load Docker image
        if: steps.changes.outputs.changed == 'true'
        run: docker load -i ${{ matrix.service }}.tar

      - name: Login to Docker Hub
        if: steps.changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        if: steps.changes.outputs.changed == 'true'
        run: docker push ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push
    strategy:
      matrix:
        service: [add-like, remove-like, get-likes]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "^${{ matrix.service }}/|^\.github/workflows/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Seleccionar ambiente y SSH key
        if: steps.changes.outputs.changed == 'true'
        id: select-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "host=${{ secrets.EC2_QA }}" >> $GITHUB_OUTPUT
            echo "key<<EOF" >> $GITHUB_OUTPUT
            echo "${{ secrets.SSH_KEY_QA }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "host=${{ secrets.EC2_PROD }}" >> $GITHUB_OUTPUT
            echo "key<<EOF" >> $GITHUB_OUTPUT
            echo "${{ secrets.SSH_KEY_PROD }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Deploy updated microservice to EC2 via SSH
        if: steps.changes.outputs.changed == 'true'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ steps.select-env.outputs.host }}
          username: ubuntu
          key: ${{ steps.select-env.outputs.key }}
          port: 22
          script: |
            docker rm -f ${{ matrix.service }} || true

            export DB_HOST='${{ secrets.DB_HOST }}'
            export DB_USER='${{ secrets.DB_USER }}'
            export DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            export DB_PORT='${{ secrets.DB_PORT }}'
            export PET_DB_NAME='${{ secrets.PET_DB_NAME }}'
            export POST_DB_NAME='${{ secrets.POST_DB_NAME }}'
            export REACTIONS_DB_NAME='${{ secrets.REACTIONS_DB_NAME }}'
            export JWT_SECRET='${{ secrets.JWT_SECRET }}'

            # Puertos seg√∫n microservicio
            if [ "${{ matrix.service }}" = "add-like" ]; then
              docker run -d --name add-like -p 6001:6001 ${{ env.DOCKERHUB_USERNAME }}/add-like:latest
            elif [ "${{ matrix.service }}" = "remove-like" ]; then
              docker run -d --name remove-like -p 6002:6002 ${{ env.DOCKERHUB_USERNAME }}/remove-like:latest
            elif [ "${{ matrix.service }}" = "get-likes" ]; then
              docker run -d --name get-likes -p 6003:6003 ${{ env.DOCKERHUB_USERNAME }}/get-likes:latest
            fi
