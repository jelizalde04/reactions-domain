name: Docker Build, Push & Deploy by Service (No Matrix, Puertos Exactos, .env en EC2)

on:
  push:
    branches: [main, test]
    paths:
      - 'add-like/**'
      - 'get-likes/**'
      - 'remove-like/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths:
      - 'add-like/**'
      - 'get-likes/**'
      - 'remove-like/**'
      - '.github/workflows/**'

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ secrets.DB_PORT }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PET_DB_NAME: ${{ secrets.PET_DB_NAME }}
  POST_DB_NAME: ${{ secrets.POST_DB_NAME }}
  REACTIONS_DB_NAME: ${{ secrets.REACTIONS_DB_NAME }}
  WEBHOOK_NOTIFICATIONS_URL: ${{ secrets.WEBHOOK_NOTIFICATIONS_URL }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  EC2_REACTIONS_DOMAIN_TEST: ${{ secrets.EC2_REACTIONS_DOMAIN_TEST }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  add_like_service:
    name: CI/CD add-like
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (
        contains(join(github.event.commits.*.modified, ','), 'add-like/') ||
        contains(join(github.event.commits.*.added, ','), 'add-like/') ||
        contains(join(github.event.commits.*.removed, ','), 'add-like/')
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies & run tests
        working-directory: ./add-like
        run: |
          pip install -r requirements.txt
          pytest

      - name: Build Docker image
        working-directory: ./add-like
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/add-like:${{ github.sha }} .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/add-like:${{ github.sha }}

      - name: Deploy in EC2 via SSH (with .env)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_REACTIONS_DOMAIN_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat <<EOF > /home/ubuntu/add-like.env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PORT=${{ secrets.DB_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PET_DB_NAME=${{ secrets.PET_DB_NAME }}
            POST_DB_NAME=${{ secrets.POST_DB_NAME }}
            REACTIONS_DB_NAME=${{ secrets.REACTIONS_DB_NAME }}
            WEBHOOK_NOTIFICATIONS_URL=${{ secrets.WEBHOOK_NOTIFICATIONS_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            EOF

            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/add-like:${{ github.sha }}
            docker stop add-like || true && docker rm add-like || true
            docker run -d --name add-like \
              --env-file /home/ubuntu/add-like.env \
              -p 6001:6001 \
              ${{ secrets.DOCKERHUB_USERNAME }}/add-like:${{ github.sha }}

  get_likes_service:
    name: CI/CD get-likes
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (
        contains(join(github.event.commits.*.modified, ','), 'get-likes/') ||
        contains(join(github.event.commits.*.added, ','), 'get-likes/') ||
        contains(join(github.event.commits.*.removed, ','), 'get-likes/')
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies & run tests
        working-directory: ./get-likes
        run: |
          pip install -r requirements.txt
          pytest

      - name: Build Docker image
        working-directory: ./get-likes
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/get-likes:${{ github.sha }} .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/get-likes:${{ github.sha }}

      - name: Deploy in EC2 via SSH (with .env)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_REACTIONS_DOMAIN_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat <<EOF > /home/ubuntu/get-likes.env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PORT=${{ secrets.DB_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PET_DB_NAME=${{ secrets.PET_DB_NAME }}
            POST_DB_NAME=${{ secrets.POST_DB_NAME }}
            REACTIONS_DB_NAME=${{ secrets.REACTIONS_DB_NAME }}
            WEBHOOK_NOTIFICATIONS_URL=${{ secrets.WEBHOOK_NOTIFICATIONS_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            EOF

            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/get-likes:${{ github.sha }}
            docker stop get-likes || true && docker rm get-likes || true
            docker run -d --name get-likes \
              --env-file /home/ubuntu/get-likes.env \
              -p 6003:6003 \
              ${{ secrets.DOCKERHUB_USERNAME }}/get-likes:${{ github.sha }}

  remove_like_service:
    name: CI/CD remove-like
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (
        contains(join(github.event.commits.*.modified, ','), 'remove-like/') ||
        contains(join(github.event.commits.*.added, ','), 'remove-like/') ||
        contains(join(github.event.commits.*.removed, ','), 'remove-like/')
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies & run tests
        working-directory: ./remove-like
        run: |
          pip install -r requirements.txt
          pytest

      - name: Build Docker image
        working-directory: ./remove-like
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/remove-like:${{ github.sha }} .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/remove-like:${{ github.sha }}

      - name: Deploy in EC2 via SSH (with .env)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_REACTIONS_DOMAIN_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat <<EOF > /home/ubuntu/remove-like.env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PORT=${{ secrets.DB_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PET_DB_NAME=${{ secrets.PET_DB_NAME }}
            POST_DB_NAME=${{ secrets.POST_DB_NAME }}
            REACTIONS_DB_NAME=${{ secrets.REACTIONS_DB_NAME }}
            WEBHOOK_NOTIFICATIONS_URL=${{ secrets.WEBHOOK_NOTIFICATIONS_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            EOF

            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/remove-like:${{ github.sha }}
            docker stop remove-like || true && docker rm remove-like || true
            docker run -d --name remove-like \
              --env-file /home/ubuntu/remove-like.env \
              -p 6002:6002 \
              ${{ secrets.DOCKERHUB_USERNAME }}/remove-like:${{ github.sha }}
